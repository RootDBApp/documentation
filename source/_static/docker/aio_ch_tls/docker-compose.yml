version: "3.8"
services:
  rootdb:
    env_file:
      - env
    image: atomicwebsas/rootdb:latest
    container_name: rootdb
    restart: unless-stopped
    stdin_open: true
    tty: true
    working_dir: /var/www/
    volumes:
      - ${DATA_DIR:-rootdb_var_www}:/var/www/
      - ${API_ENV_PATHNAME}:/var/www/.api_env:rw
      - ${FRONTEND_APP_CONFIG_PATHNAME}:/var/www/.app-config.js:rw
      # Mandatory if NGINX_USE_SSL: 1
      - ${NGINX_SSL_CERTS_DIR:-.}:/etc/nginx/ssl:rw
    ports:
      - "6001:6001"
      - "9000:9000"
    networks:
      rootdb-network:
        ipv4_address: 172.200.0.10
    depends_on:
      - rootdb-memcached
      - rootdb-db-api

  rootdb-memcached:
    env_file:
      - env
    image: atomicwebsas/rootdb-memcached:latest
    container_name: rootdb-memcached
    tty: true
    restart: unless-stopped
    ports:
      - "${MEMCACHED_PORT:-11211}:${MEMCACHED_PORT:-11211}"
    networks:
      rootdb-network:
        ipv4_address: 172.200.0.30

  rootdb-nginx:
    env_file:
      - env
    image: atomicwebsas/rootdb-nginx:latest
    container_name: rootdb-nginx
    tty: true
    restart: unless-stopped
    environment:
      NGINX_USE_SSL: "${NGINX_USE_SSL:-0}"
      NGINX_API_HOST: "${NGINX_API_HOST:-localhost}"
      NGINX_API_PORT: "${NGINX_PORT:-80}"
      NGINX_API_PORT_SSL: "${NGINX_PORT_SSL:-443}"
      NGINX_FRONTEND_HOST: "${NGINX_FRONTEND_HOST:-localhost}"
      NGINX_FRONTEND_PORT: "${NGINX_PORT:-80}"
      NGINX_FRONTEND_PORT_SSL: "${NGINX_PORT_SSL:-443}"
      NGINX_SSL_CERTIFICATE: "${NGINX_SSL_CERTIFICATE:-server.crt}"
      NGINX_SSL_CERTIFICATE_KEY: "${NGINX_SSL_CERTIFICATE_KEY:-server.key}"
    ports:
      - "${NGINX_PORT:-80}:${NGINX_PORT:-80}"
      - "${NGINX_PORT_SSL:-443}:${NGINX_PORT_SSL:-443}"
    volumes:
      - ${DATA_DIR:-rootdb_var_www}:/var/www/
      - ${API_ENV_PATHNAME}:/var/www/.api_env:rw
      - ${FRONTEND_APP_CONFIG_PATHNAME}:/var/www/.app-config.js:rw
      # Mandatory if NGINX_USE_SSL: 1
      - ${NGINX_SSL_CERTS_DIR:-.}:/etc/nginx/ssl:rw
    networks:
      rootdb-network:
        ipv4_address: 172.200.0.40
    depends_on:
      - rootdb-db-api

  rootdb-db-api:
    env_file:
      - env
    image: mariadb:latest
    container_name: rootdb-db-api
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:${DB_PORT:-3306}"
    environment:
      MYSQL_TCP_PORT: ${DB_PORT:-3306}
      MYSQL_UNIX_PORT: ${DB_PORT:-3306}
      MYSQL_DATABASE: rootdb-api
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-oLoo4cee5aaYon4po6ojoophie2aiY}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD:-uo2Coxiek4chaib5apooqu6yei8ip1}
      MYSQL_USER: rootdb_api_user
      SERVICE_TAGS: prod
      SERVICE_NAME: mariadb
    volumes:
      - ${DB_DATA_DIR:-rootdb_db_api_var_lib_mysql}:/var/lib/mysql
    networks:
      rootdb-network:
        ipv4_address: 172.200.0.50

volumes:
  rootdb_docker_entrypoint_sh:
  rootdb_var_www:
  rootdb_db_api_var_lib_mysql:

networks:
  rootdb-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.200.0.0/16






